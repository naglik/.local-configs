" set up vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()
Plugin 'gmarik/vundle'


" vundle github plugins
Plugin 'sjl/gundo.vim'
Plugin 'croaker/mustang-vim'
Plugin 'scrooloose/nerdcommenter'
"Plugin 'StanAngeloff/php.vim'
Plugin 'jacquesbh/vim-showmarks'
Plugin 'tomtom/checksyntax_vim'
Plugin 'ervandew/supertab'
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'vim-scripts/jQuery'
"Plugin 'vim-scripts/SyntaxComplete'
Plugin 'othree/html5.vim'
Plugin 'majutsushi/tagbar'
Plugin 'tmhedberg/matchit'
Plugin 'ludovicPelle/vim-xdebug'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'wellle/targets.vim'
Plugin 'vim-scripts/Align'
Plugin 'ludovicchabant/vim-gutentags'
Plugin 'Shougo/vimproc.vim'
Plugin 'Shougo/unite.vim'
Plugin 'tpope/vim-sensible'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'duggiefresh/vim-easydir'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'jondkinney/dragvisuals.vim'
Plugin 'danro/rename.vim'
Plugin 'vim-scripts/Decho'
Plugin 'sirver/ultisnips'
Plugin 'tobyS/pdv'
Plugin 'tobyS/vmustache'
Plugin 'scrooloose/nerdtree'
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'vim-scripts/ctags.vim--Johnson'

"react development
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'w0rp/ale'

"""""""private settings"""""""
syntax on "enable syntax-hiliting

"""Sets"""

" Force 256 color terminal
set term=xterm-256color
set t_Co=256

set background=dark "let vim realise that the background is dark
set undofile " Allow to undo even after the files was closed
set undodir=~/.vim/undodir " Store the undodir here
set mouse=a " Mouse to the max
set number " Show linenumbers
set ruler " Show the line and column number of the cursor position, separated by a comma    . Needed by the status-line
set cmdheight=2 " Command-space is 2 lines so tab-completion doesn't always jump around
set laststatus=2 " The last active window will be marked specially, even if there only exists one window
set scrolloff=3 " Minimal number of screen lines to keep above and below the cursor.
set showcmd " Show (partial) command in the last line of the screen
set incsearch " Incremental search - While typing a search command, show where the pattern, as it was typed so far, matches.
set ignorecase " Gross/Kleinschreibung ignorieren
set smartcase " Gross/Kleinschreibung nicht mehr ignorieren, sobald Grossbuchstaben vorkommen
set hlsearch " Highlight search matches
set visualbell " Flash the screen instead of beeping
set showmode " Show the current mode vim is in
set expandtab
set shiftwidth=2
set tabstop=2
set smarttab
set backspace=indent,eol,start " Allows backspace - over autoindent - over line breaks (join lines)- over the start of insert
set esckeys " Function keys that start with an <Esc> are recognized in Insert mode
" 'smarttab' 'sta' When on, a <Tab> in front of a line inserts blanks according to 'shiftwidth'. 'tabstop' or 'softtabstop' is used in other places.
"  A <BS> will delete a 'shiftwidth' worth of space at the start of the line.
set smarttab
set autoindent " Autoindent
set expandtab " Expand tabs to spaces
set showfulltag " When completing a word in insert mode (see ins-completion) from the tags file, show both the tag name and a tidied-up form of the search pattern (if there is one) as possible matches.
set noequalalways " Disabled setting high to equal for all remaining buffers after closing a buffer

set winminheight=0 " only show the status line of a file if minimized
"""mapping"""

" autofix the common q: misstype
map q: :q

" search with *( or # and then press M to replace the searched query
nmap <expr>  M ':%s/' . @/ . '//g<LEFT><LEFT>'
vmap <expr>  M  ':s/' . @/ . '//g<LEFT><LEFT>'

" disable 'Entering Ex mode' in Vim
map Q <Nop>

" Tab goes down one window in normal mode
nnoremap <Tab> <C-w>w
" Shift+Tab goes up one window in normal mode
nnoremap <S-Tab> <C-w>W

" Make up/down-keys go up a visual line and not a code line
map <silent> ^[OB gj
map <silent> ^[OA gk

" Highlight spaces at the end of the line
highlight WhitespaceEOL ctermbg=red guibg=red
match WhitespaceEOL /\s\+$/

" Highlight tabs in order to find and eliminate them easier
syn match Tab " "
hi def Tab ctermbg=Blue

" Keep the selection when usinf < and >
vnoremap < <gv
vnoremap > >gv

" gp selects the previously pasted text
nnoremap gp `[v`]

" highlighting for bracket-matches
hi ShowPairsHL ctermbg=red ctermfg=white gui=bold guibg=#ffa000
hi ShowPairsHLPair ctermbg=red ctermfg=white gui=bold guibg=#ffa000 guifg=#ff0000


"""plugin customization and mapping"""

" NeRDComment
noremap <C-c>  :call NERDComment(0, "toggle")<CR>
vnoremap <C-c> :call NERDComment(0, "toggle")<CR>gv

" Gundo
nnoremap <F10> :GundoToggle<CR>

" Powerline
let g:airline_powerline_fonts=1
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#tagbar#enabled = 1

" NERDTree
map <F9> :NERTreeToggle<CR>
